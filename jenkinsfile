pipeline {
    agent {
        label 'AGENT-1'
    }
    options{
        // Timeout counter starts AFTER agent is allocated
        timeout(time: 10, unit: 'MINUTES')
        disableConcurrentBuilds()
        //retry(1)
    }
      parameters {
        string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')

        text(name: 'BIOGRAPHY', defaultValue: '', description: 'Enter some information about the person')

        booleanParam(name: 'TOGGLE', defaultValue: true, description: 'Toggle this value')

        choice(name: 'CHOICE', choices: ['One', 'Two', 'Three'], description: 'Pick something')

        password(name: 'PASSWORD', defaultValue: 'SECRET', description: 'Enter a password')
    }
    stages {
        stage('Build') {
            steps {
              sh 'echo this is Build'
            }
        }
        stage('Test') {
            steps {
             sh 'echo this is Test'
            }
        }
        stage('Deploy') {
            steps {
                sh 'echo this is Deploy'
                error 'pipeline failed'
            }
        }
        stage('Print Params') {
            steps {
                echo "Hello ${params.PERSON}"
                echo "Biography: ${params.BIOGRAPHY}"
                echo "TOGGLE: ${params.TOGGLE}"
                echo "CHOICE: ${params.CHOICE}"
                echo "PASSWORD: ${params.PASSWORD}"
            }
        }
    }

    post{
      always{
        echo "This action run always"
        deleteDir()
      }

      success{
  
         echo "This section run when pipeline success"
      }

      failure{
          echo "This action run when pipeline failure"

      }
    }
}